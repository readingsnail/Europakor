# Copyright 2013-2015, Red Hat, Inc.
#
# This is free software; you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
#
# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this software; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the FSF
# site: http://www.fsf.org.
#
# Completion for Zanata Java command-line client
# Generated by BashCompletionGenerator
#
_zanata()
{
    local cur prev opts base cmds
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    base="${COMP_WORDS[1]}"
    cmds="init list-remote pull push put-project put-user put-version stats"
    if [[ ${#COMP_WORDS[@]} == 2 ]] ; then
        COMPREPLY=( $(compgen -W "${cmds} --help" -- ${cur}) )
        return 0
    fi
    if [[ ${COMP_WORDS[1]} == '--help' ]] ; then
        COMPREPLY=( $(compgen -W "${cmds}" -- ${cur}) )
        return 0
    fi
    case "${prev}" in
        --project-config)
            COMPREPLY=( $(compgen -df ${cur}) )
            return 0
            ;;
        --user-config)
            COMPREPLY=( $(compgen -df ${cur}) )
            return 0
            ;;
        --src-dir)
            COMPREPLY=( $(compgen -d ${cur}) )
            return 0
            ;;
        --trans-dir)
            COMPREPLY=( $(compgen -d ${cur}) )
            return 0
            ;;
        --source-checkout-url)
            COMPREPLY=( $(compgen -A hostname ${cur}) )
            return 0
            ;;
        --source-view-url)
            COMPREPLY=( $(compgen -A hostname ${cur}) )
            return 0
            ;;
        --url)
            COMPREPLY=( $(compgen -A hostname ${cur}) )
            return 0
            ;;
    esac
    case "${base}" in
        init)
            local init_opts="--project-type --src-dir --trans-dir --project-config --project-version --project --includes --excludes --user-config --log-http --disable-ssl-cert --key --url --username --errors --help --quiet --batch-mode --debug"
            COMPREPLY=( $(compgen -W "${init_opts}" -- ${cur}) )
            return 0
            ;;
        list-remote)
            local list-remote_opts="--project-type --src-dir --trans-dir --project-config --project-version --project --includes --excludes --user-config --log-http --disable-ssl-cert --key --url --username --errors --help --quiet --batch-mode --debug"
            COMPREPLY=( $(compgen -W "${list-remote_opts}" -- ${cur}) )
            return 0
            ;;
        pull)
            local pull_opts="--encode-tabs --include-fuzzy --continue-after-error --min-doc-percent --use-cache --purge-cache --locales --pull-type --create-skeletons --from-doc --dry-run --project-type --src-dir --trans-dir --project-config --project-version --project --includes --excludes --user-config --log-http --disable-ssl-cert --key --url --username --errors --help --quiet --batch-mode --debug"
            COMPREPLY=( $(compgen -W "${pull_opts}" -- ${cur}) )
            return 0
            ;;
        push)
            local push_opts="--exclude-locale-filenames --src-lang --copy-trans --merge-type --push-type --default-excludes --chunk-size --file-types --locales --my-trans --case-sensitive --validate --from-doc --dry-run --project-type --src-dir --trans-dir --project-config --project-version --project --includes --excludes --user-config --log-http --disable-ssl-cert --key --url --username --errors --help --quiet --batch-mode --debug"
            COMPREPLY=( $(compgen -W "${push_opts}" -- ${cur}) )
            return 0
            ;;
        put-project)
            local put-project_opts="--source-checkout-url --default-project-type --project-slug --project-name --project-desc --source-view-url --user-config --log-http --disable-ssl-cert --key --url --username --errors --help --quiet --batch-mode --debug"
            COMPREPLY=( $(compgen -W "${put-project_opts}" -- ${cur}) )
            return 0
            ;;
        put-user)
            local put-user_opts="--user-email --user-username --user-passwordhash --user-key --user-langs --user-roles --user-disabled --user-name --user-config --log-http --disable-ssl-cert --key --url --username --errors --help --quiet --batch-mode --debug"
            COMPREPLY=( $(compgen -W "${put-user_opts}" -- ${cur}) )
            return 0
            ;;
        put-version)
            local put-version_opts="--project-type --version-project --version-slug --user-config --log-http --disable-ssl-cert --key --url --username --errors --help --quiet --batch-mode --debug"
            COMPREPLY=( $(compgen -W "${put-version_opts}" -- ${cur}) )
            return 0
            ;;
        stats)
            local stats_opts="--word --docid --details --format --project-type --src-dir --trans-dir --project-config --project-version --project --includes --excludes --user-config --log-http --disable-ssl-cert --key --url --username --errors --help --quiet --batch-mode --debug"
            COMPREPLY=( $(compgen -W "${stats_opts}" -- ${cur}) )
            return 0
            ;;
    esac
}
complete -F _zanata zanata-cli